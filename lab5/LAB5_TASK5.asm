.MODEL SMALL
.STACK 100H
.DATA
    MSG1  DB  'ENTER A STRING OF CAPITAL LETTERS :', 0DH, 0AH, '$'
    MSG2  DB  0DH,0AH,'THE LONGEST CONSECUTIVE INCREASING STRING IS :', 0DH, 0AH, '$'
.CODE
MAIN PROC
 
    MOV AX,@DATA
    MOV DS,AX
 
    MOV CH,0       ;STORES LENGTH OF LONGEST SEQUENCE
 
    MOV AH,9
    LEA DX,MSG1
    INT 21H        ;DISPLAYS MSG1
 
    NEW_SEQ:
    MOV AH,1
    INT 21H
     
    CMP AL,0DH     ;LOOKS COR CARRIAGE RETURN
    JE SEQ_END
    MOV CL,1       ;COUNT FOR LETTERS IN SEQUENCE
    MOV BL,AL      ;STORES LETTER FOR COMPARISON
    MOV DH,AL      ;STORES STARTING LETTER OF SEQUENCE
    CONT_SEQ:
    INT 21H
 
    CMP AL,0DH
    JE SEQ_END
 
    INC BL
    CMP BL,AL      ;CHECKS IF LETTERS ARE CONSECUTIVE
    JNE RESTART    ;REINITIALIZES SEQUENCE
    INC CL         ;INCREASES COUNT
    JMP CONT_SEQ   ;GOES FOR THE NEXT INPUT
    RESTART:
    CMP CH,CL
    JL UPDATE      ;UPDATES IF NEW SEQUENCE IS LARGER
 
    MOV CL,1
    MOV BL,AL
    MOV DH,AL
    JMP CONT_SEQ
 
    UPDATE:
    MOV CH,CL      ;NEW LONGEST LENGTH IS STORED
    MOV BH,DH       
    MOV CL,1       ;RESETS COUNTER
    MOV BL,AL
    MOV DH,AL
    JMP CONT_SEQ
    SEQ_END:      
    CMP CH,CL
    JL REUPDATE
    JMP END_PROG
 
    REUPDATE:      ;UPDATES IF FINAL SEQUENCE IS LARGEST
    MOV CH,CL
    MOV BH,DH
    
    END_PROG:           
    MOV AH,9
    LEA DX, MSG2
    INT 21H
 
    MOV AH,2
    MOV DL,BH
    
    OUTPUT:
    CMP CH,0
    JE TERMINATE   ;TERMINATES IF NO INPUT WAS GIVEN
 
    DEC CH
    INT 21H        ;DISPLAYS LONGEST SEQUENCE
    INC DL         ;INC DL TO GET THE NEXT LETTER IN THE SEQUENCE
    JMP OUTPUT
    
    TERMINATE:         
    MOV AH,4CH
    INT 21H
       
    MAIN ENDP
END MAIN